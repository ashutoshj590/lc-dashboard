[  {    "type": "post",    "url": "/api/addpost",    "title": "Add a new post or reply.",    "description": "<p>Adds a new post or a reply to an existing post. If it contains an image, it needs to be passed as base64 encoded string.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Cookie",            "description": "<p>connect.sid= ... &lt; cookie recieved after calling adduser &gt;</p>"          }        ]      }    },    "name": "AddPost",    "group": "Post",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "text",            "description": "<p>Post/Replies text.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "allowedValues": [              "true",              "false"            ],            "optional": false,            "field": "has_image",            "description": "<p>Whether the post being uploaded contains an image or not?.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "baseImage",            "description": "<p>Base64 encoded image, which will be uploaded along with the post.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "parent",            "description": "<p>Add the id of original post, if this new one is a reply to the post.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "post_id",            "description": "<p>encrypted unique post id.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "response_code",            "description": "<ol start=\"200\"> <li></li> </ol>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response_message",            "description": "<p>lastname  &quot;post saved successfully&quot;.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"success\"\n     \"response_code\": 200\n     \"response_message\": \"\"\n     \"post_id\": \"5793765e1950a84b1c77ed4d\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "PostAddError",            "description": "<p>There was an error trying to save the post.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p><code>405</code> Server is unable to fetch user id, session has expired. Please call api/adduser.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"status\": \"error\"\n  \"response_code\": 401\n  \"response_message\": \"There was an error trying to save new post\"\n}",          "type": "json"        }      ]    },    "filename": "../live-comments/server.js",    "groupTitle": "Post"  },  {    "type": "post",    "url": "/api/getposts",    "title": "Get paginated posts, replies or my posts.",    "description": "<p>Used to get all posts, all the replies to a post (when <code>parent</code> is passed), or to get all posts for logged in user as of now.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Cookie",            "description": "<p>connect.sid= ... &lt; cookie recieved after calling adduser &gt;</p>"          }        ]      }    },    "name": "GetPosts",    "group": "Post",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "page",            "description": "<p>Page number (pagination wise).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "limit",            "description": "<p>Size of the page.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "my_post",            "description": "<p>true or false. If true, will return only my posts</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "parent",            "description": "<p>Parent is required, if fetching replies to a post, or post is associated with a url or content. Pass post_id of parent here.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "allowedValues": [              "true",              "false"            ],            "optional": true,            "field": "parent_details",            "description": "<p>Parent is needed, if one needs the details of parent post.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "posts",            "description": "<p>Array of Posts.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "posts.docs",            "description": "<p>Array of post objects.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "posts.docs._id",            "description": "<p>Post's unique id. All future requests regarding a post shall need this id.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "posts.docs.has_image",            "description": "<p>true or false.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "posts.docs.up_vote",            "description": "<p>Total upvote counts for a post.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "posts.docs.down_vote",            "description": "<p>Total downvote counts for a post.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "posts.docs.reply_count",            "description": "<p>Total replies for the post.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "posts.docs.created_at",            "description": "<p>Created date in GMT.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "posts.docs.text",            "description": "<p>Post's main text.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "posts.docs.user_name",            "description": "<p>Name of the user who created the post (can be an alias etc).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "posts.docs.user_image",            "description": "<p>User's profile image which will be show against his/her post.</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": true,            "field": "posts.docs.up_voted",            "description": "<p>If current logged in user has already up voted this post, this param will be returned with value <code>true</code></p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": true,            "field": "posts.docs.down_voted",            "description": "<p>If current logged in user has already down voted this post, this param will be returned with value <code>true</code></p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": true,            "field": "parent_post",            "description": "<p>Parent post's details in the format, same as array element above. Will be returned, only if parent_details params is set to true</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "response_code",            "description": "<ol start=\"200\"> <li></li> </ol>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response_message",            "description": "<p>&quot;&quot;.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "    HTTP/1.1 200 OK\n    {\n          \"status\": \"success\",\n          \"response_code\": 200,\n          \"response_message\": \"\",\n          \"posts\": {\n              \"docs\": [\n                  {\n                      \"_id\": \"5790beebe61f7e6310c3933c\",\n                      \"has_image\": false,\n                      \"down_vote\": 0,\n                      \"up_vote\": 0,\n                      \"reply_count\": 0,\n                      \"created_at\": \"2016-07-21T12:24:11.881Z\",\n                      \"text\": \"Smoke some weed and chill the fuck out\",\n                      \"user_name\": \"tarun\",\n                      \"user_image\": \"http://wp.media4.hollywood.com/wp-content/uploads/2015-06-25-Fight-Club-Brad-Pitt-20th-Century-Fox-638x425.jpg\"\n                  }\n              ]\n          }\n\t    }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"status\": \"error\"\n  \"response_code\": 401\n  \"response_message\": \"There was an error trying fetch the posts\"\n}",          "type": "json"        }      ]    },    "filename": "../live-comments/server.js",    "groupTitle": "Post"  },  {    "type": "post",    "url": "/api/postaction",    "title": "Peform action on post",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Cookie",            "description": "<p>connect.sid= ... &lt; cookie recieved after calling adduser &gt;</p>"          }        ]      }    },    "name": "PostAction",    "group": "Post",    "version": "1.0.0",    "description": "<p>Performs <code>up_vote</code>, <code>down_vote</code>, <code>delete</code> action for for a post. A user can delete only his post, otherwise post will not be deleted. <br /></p> <ul><li>If a post is already up voted by a user, up_vote will be removed, but will not be down_voted.</li> <li> Similarly, if a post is already down voted by a user, down vote will be removed, but will not be up voted.</li>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "post_id",            "description": "<p>Your app id (available in admin console, configured in SDK).</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"delete\"",              "\"up_vote\"",              "\"down_vote\""            ],            "optional": false,            "field": "action",            "description": "<p>User's device id (available in admin console, configured in SDK).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "response_code",            "description": "<ol start=\"200\"> <li></li> </ol>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response_message",            "description": "<p>action performed beautifully.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"success\"\n     \"response_code\": 200\n     \"response_message\": \"action performed beautifully\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"status\": \"error\"\n  \"response_code\": 401\n  \"response_message\": \"There was an error trying to perform the action\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p><code>405</code> Server is unable to fetch user id, session has expired. Please call api/adduser.</p>"          }        ]      }    },    "filename": "../live-comments/server.js",    "groupTitle": "Post"  },  {    "type": "post",    "url": "/api/search",    "title": "Search in posts.",    "description": "<p>Returns all the search result for particular text. Search's the replies as well. Search results are in decsending order of the search score.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Cookie",            "description": "<p>connect.sid= ... &lt; cookie recieved after calling adduser &gt;</p>"          }        ]      }    },    "name": "Search",    "group": "Post",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "search_string",            "description": "<p>A string which you want to search for (scope: whole forums, reples etc).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "search_results",            "description": "<p>Array of post objects.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "search_results._id",            "description": "<p>Post's unique id. All future requests regarding a post shall need this id.</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "search_results.has_image",            "description": "<p>true or false.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "search_results.up_vote",            "description": "<p>Total upvote counts for a post.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "search_results.down_vote",            "description": "<p>Total downvote counts for a post.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "search_results.reply_count",            "description": "<p>Total replies for the post.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "search_results.created_at",            "description": "<p>Created date in GMT.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "search_results.text",            "description": "<p>Post's main text.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "search_results.user_name",            "description": "<p>Name of the user who created the post (can be an alias etc).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "search_results.user_image",            "description": "<p>User's profile image which will be show against his/her post.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "search_results.score",            "description": "<p>A search score. Higher the score, closer the result (currently results are sorted as required i.e descending).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "response_code",            "description": "<ol start=\"200\"> <li></li> </ol>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response_message",            "description": "<p>&quot;&quot;</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "    HTTP/1.1 200 OK\n    {\n          \"status\": \"success\",\n          \"response_code\": 200,\n          \"response_message\": \"\",\n          \"search_results\":\n          [\n               {\n                  \"_id\": \"5790beebe61f7e6310c3933c\",\n                  \"has_image\": false,\n                  \"down_vote\": 0,\n                  \"up_vote\": 0,\n                  \"reply_count\": 0,\n                  \"created_at\": \"2016-07-21T12:24:11.881Z\",\n                  \"text\": \"Smoke some weed and chill the fuck out\",\n                  \"user_name\": \"tarun\",\n                  \"user_image\": \"http://wp.media4.hollywood.com/wp-content/uploads/2015-06-25-Fight-Club-Brad-Pitt-20th-Century-Fox-638x425.jpg\"\n              }\n          ]\n\t    }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"status\": \"error\"\n  \"response_code\": 401\n  \"response_message\": \"There was an error trying to save new user\"\n}",          "type": "json"        }      ]    },    "filename": "../live-comments/server.js",    "groupTitle": "Post"  },  {    "type": "post",    "url": "/api/adduser",    "title": "Add or Authenticate user for app.",    "description": "<p>To register a new user or to authenticate an existing user. app_id and device_id as mandatory. Login with facebook needs a flow change which will use the server side auth code verification. The cookie recieved along with the response should be saved at client side, and will be used in all subsequent requests.</p>",    "name": "AddUser",    "group": "User",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "app_id",            "description": "<p>Your app id (available in admin console, configured in SDK).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "device_id",            "description": "<p>User's device id (available in admin console, configured in SDK).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "auth_code",            "description": "<p>Social login access token (only fb as of now).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>User's device id (available in admin console, configured in SDK).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "user_id",            "optional": false,            "field": "User",            "description": "<p>'s encrypted unique id.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of user.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "gender",            "description": "<p>Lastname of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "response_code",            "description": "<ol start=\"200\"> <li></li> </ol>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response_message",            "description": "<p>lastname  Lastname of the User.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"success\"\n     \"response_code\": 200\n     \"response_message\": \"\"\n     \"user_id\": \"578b691a8f3c95aa0897ca52\"\n     \"name\": \"tarun\"\n     \"gender\": \"m\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"status\": \"error\"\n  \"response_code\": 401\n  \"response_message\": \"There was an error trying to save new user\"\n}",          "type": "json"        }      ]    },    "filename": "../live-comments/server.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/api/logout",    "title": "Delete session for user and log him out of comments.",    "description": "<p>Logs out the current user and server side session is destroyed.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Cookie",            "description": "<p>connect.sid= ... &lt; cookie recieved after calling adduser &gt;</p>"          }        ]      }    },    "name": "LogOut",    "group": "User",    "version": "1.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "response_code",            "description": "<ol start=\"200\"> <li></li> </ol>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response_message",            "description": "<p>logged out.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"success\"\n     \"response_code\": 200\n     \"response_message\": \"logged out\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"status\": \"error\"\n  \"response_code\": 401\n  \"response_message\": \"There was an error trying to save new user\"\n}",          "type": "json"        }      ]    },    "filename": "../live-comments/server.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/api/validatesession",    "title": "Validate and refresh user's session.",    "description": "<p>This should be called at the start of each session. If any new values are to be stored in session at server side, or to increase session expiry needs to be increased, this will take care of it. In case of invalid session, add user needs to be called again.</p>",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Cookie",            "description": "<p>connect.sid= ... &lt; cookie recieved after calling adduser &gt;</p>"          }        ]      }    },    "name": "ValidateSession",    "group": "User",    "version": "1.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>success.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "response_code",            "description": "<ol start=\"200\"> <li></li> </ol>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "response_message",            "description": "<p>&quot;Session refreshed yo.&quot;</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "    HTTP/1.1 200 OK\n    {\n          \"status\": \"success\",\n          \"response_code\": 200,\n          \"response_message\": \"Session refreshed yo.\",\n\t   }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"status\": \"error\"\n  \"response_code\": 405\n  \"response_message\": \"server is unable to fetch user id, session has expired.\"\n}",          "type": "json"        }      ]    },    "filename": "../live-comments/server.js",    "groupTitle": "User"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "../live-comments/views/apidoc/main.js",    "group": "_Users_tarun_proj_live_comments_views_apidoc_main_js",    "groupTitle": "_Users_tarun_proj_live_comments_views_apidoc_main_js",    "name": ""  }]
